function Get-MarvelData{    [cmdletbinding()]    Param    (        [parameter(Mandatory=$true,valuefrompipeline=$True)]        [Alias("Name")]        [String[]]        $Character,        [Switch]        $CrossReference,        [Switch]        $ListSeries    )    BEGIN{}    PROCESS    {        $CI = 0        $ch=0        foreach($C in $Character)        {            #$D = irm -uri "http://gateway.marvel.com/v1/public/characters?name=thor&ts=1&apikey=ed9310fd995ae996e296fa4e48a81af8&hash=798bdc85073b1e41a308e072ec5c5df2"            irm -uri "http://gateway.marvel.com/v1/public/characters?name=$C&ts=1&apikey=ed9310fd995ae996e296fa4e48a81af8&hash=798bdc85073b1e41a308e072ec5c5df2" -OutVariable +CharacterInfo | Out-Null                               $CharacterInfo.data.results[$CI] | fl Name,ID,@{Name="BIO";Expression={$_.Description}}            $CI++                            if($ListSeries)            {                                 List-CharacterSeries $CharacterInfo[$ch]                $ch++            }        }        if($CrossReference)        {            Get-CharacterCrossReference $CharacterInfo          }    }    END{}}Function Get-CharacterCrossReference{    [cmdletbinding()]    Param    (        $CharacterInfo    )    $MainCharacter = $CharacterInfo.data.results.id[0]    $otherCharacter = ($CharacterInfo.data.results.id | select -skip 1) -join ","    #"$MainCharacter,$otherCharecter"    $b = irm -uri "http://gateway.marvel.com/v1/public/characters/$MainCharacter/comics?sharedAppearances=$otherCharacter&ts=1&apikey=ed9310fd995ae996e296fa4e48a81af8&hash=798bdc85073b1e41a308e072ec5c5df2"     $b.data.results}function List-CharacterSeries{    [cmdletbinding()]    Param    (        $CharacterInfo       )    #irm -uri ("http://gateway.marvel.com/v1/public/characters/1009610/series?&ts=1&apikey=ed9310fd995ae996e296fa4e48a81af8&hash=798bdc85073b1e41a308e072ec5c5df2")     irm -uri ($CharacterInfo.data.results.series.collectionuri+"?&ts=1&apikey=ed9310fd995ae996e296fa4e48a81af8&hash=798bdc85073b1e41a308e072ec5c5df2") -OutVariable +Series | Out-Null                        $l = 0    foreach($t in $series.data.results){                            $CSeriesObj = New-Object -TypeName psobject         $CSeriesobj | Add-Member -MemberType NoteProperty -Name "Character" -Value $CharacterInfo.data.results.name        $CSeriesobj | Add-Member -MemberType NoteProperty -Name "Series" -Value $Series.data.results.title[$l]        $CSeriesobj | Add-Member -MemberType NoteProperty -Name "Year Started" -Value $Series.data.results.startyear[$l]        $CSeriesobj | Add-Member -MemberType NoteProperty -Name "Year Ended" -Value $Series.data.results.endyear[$l]        $CSeriesObj         $l++    }}
